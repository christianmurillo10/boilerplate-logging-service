generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model businesses {
  id                 Int       @id @default(autoincrement())
  name               String    @db.VarChar(100)
  api_key            String    @db.VarChar(255)
  domain             String?   @db.VarChar(255)
  logo_path          String?   @db.VarChar(255)
  preferred_timezone String?   @db.VarChar(100)
  currency           String?   @db.VarChar(100)
  created_at         DateTime  @db.DateTime(0)
  updated_at         DateTime? @db.DateTime(0)
  deleted_at         DateTime? @db.DateTime(0)
  users              users[]
}

model users {
  id                         String         @id @default(uuid()) @db.Char(36)
  name                       String         @db.VarChar(100)
  username                   String         @db.VarChar(100)
  email                      String         @db.VarChar(100)
  access_type                String         @db.VarChar(100)
  business_id                Int?
  created_at                 DateTime       @db.DateTime(0)
  updated_at                 DateTime?      @db.DateTime(0)
  deleted_at                 DateTime?      @db.DateTime(0)
  businesses                 businesses?    @relation(fields: [business_id], references: [id], map: "users_ibfk_1")
  audit_trails_created_users audit_trails[] @relation("audit_trails_created_user_idTousers")
  user_actions_users         user_actions[] @relation("user_actions_user_idTousers")
}

model audit_trails {
  id              String   @id @default(uuid()) @db.Char(36)
  service_name    String   @db.VarChar(100)
  entity_type     String   @db.VarChar(100)
  entity_id       String   @db.VarChar(255)
  action          String   @db.VarChar(100)
  old_details     Json     @default("{}") @db.Json
  new_details     Json     @default("{}") @db.Json
  created_user_id String   @db.Char(36)
  created_at      DateTime @db.DateTime(0)
  created_users   users    @relation("audit_trails_created_user_idTousers", fields: [created_user_id], references: [id], onDelete: NoAction, map: "audit_trails_ibfk_1")

  @@index([created_user_id], map: "created_user_id")
}

model user_actions {
  id             String   @id @default(uuid()) @db.Char(36)
  service_name   String   @db.VarChar(100)
  action         String   @db.VarChar(100)
  action_details Json     @default("{}") @db.Json
  ip_address     String   @db.VarChar(100)
  user_agent     String   @db.VarChar(100)
  session_id     String   @db.VarChar(255)
  user_id        String   @db.Char(36)
  created_at     DateTime @db.DateTime(0)
  users          users    @relation("user_actions_user_idTousers", fields: [user_id], references: [id], onDelete: NoAction, map: "user_actions_ibfk_1")

  @@index([user_id], map: "user_id")
}

model event_logs {
  id           String   @id @default(uuid()) @db.Char(36)
  service_name String   @db.VarChar(100)
  event_type   String   @db.VarChar(100)
  payload      Json     @default("{}") @db.Json
  created_at   DateTime @db.DateTime(0)
}
